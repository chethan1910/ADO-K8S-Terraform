# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: BuildJob1
    steps:
    - bash: echo $(PipelineVariable)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourcesDirectory)
    - bash : ls $(System.DefaultWorkingDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: java -version
    - bash: node --version
    - bash: python --version
    - bash: mvn -version
    - bash: ls $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        
    - bash: ls -R $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

#   - job: BuildJob2
#     dependsOn: BuildJob1
#     steps:
#     - script: echo Hello BuildJob2 and variable is $(PipelineVariable)

# - stage: DevDeploy
#   variables:
#     env: Dev
#   dependsOn: Build
#   jobs:
#   - job: DevDeployJob
#     steps:
#     - bash: echo Hello $(env)DeployJob 
# - stage: QADeploy
#   variables:
#     env: QA
#   dependsOn: Build
#   jobs:
#   - job: QADeployJob
#     steps:
#     - bash: echo Hello $(env)DeployJob 
# - stage: ProdDeploy
#   variables:
#     env: Prod
#   dependsOn:
#   - DevDeploy
#   - QADeploy
#   jobs:
#   - job: ProdDeployJob
#     steps:
#     - bash: echo Hello $(env)DeployJob 

